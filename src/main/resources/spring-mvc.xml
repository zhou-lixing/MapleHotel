<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 启用spring mvc 注解, 默认的注解映射的支持 -->
    <mvc:annotation-driven/>

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.maplegroup.maplehotel.web" />

    <!-- 默认的视图解析器  -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="3">
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="suffix" value=".html"/><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->
    </bean>

    <mvc:interceptors>
        <!--登录拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/login.do" />
            <bean class="com.maplegroup.maplehotel.Intercepto.LoginInterceptor"/>
        </mvc:interceptor>
        <!--权限拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/user/userSettings.do"/>
            <mvc:mapping path="/journal/journal.do"/>
            <mvc:mapping path="/reserve/*.do"/>
            <bean class="com.maplegroup.maplehotel.Intercepto.PowerInterceptor"/>
        </mvc:interceptor>
     </mvc:interceptors>


    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>
    <!-- 静态资源映射 -->
    <mvc:resources mapping="/assets/**" location="/assets/" cache-period="31536000"/>
</beans>
